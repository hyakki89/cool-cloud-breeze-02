{% comment %}
  Header Section
{% endcomment %}

<link rel="stylesheet" href="{{ 'component-header.css' | asset_url }}" media="print" onload="this.media='all'">

<{% if section.settings.enable_sticky_header %}sticky-header class="header-wrapper color-{{ section.settings.color_scheme }} gradient"{% else %}div class="header-wrapper color-{{ section.settings.color_scheme }} gradient"{% endif %}>
  <header class="header header--middle-left page-width">
    <div class="header__heading">
      {%- if request.page_type == 'index' -%}
        <h1 class="header__heading-text">
      {%- else -%}
        <div class="header__heading-text">
      {%- endif -%}
        <a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
          {%- if settings.logo_image != blank -%}
            <div class="header__heading-logo-wrapper">
              <img
                src="{{ settings.logo_image | image_url: width: 300 }}"
                alt="{{ shop.name | escape }}"
                width="{{ settings.logo_image.width }}"
                height="{{ settings.logo_image.height }}"
                class="header__heading-logo motion-reduce">
            </div>
          {%- else -%}
            <span class="h2">{{ settings.logo_text | default: shop.name }}</span>
          {%- endif -%}
        </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- else -%}
        </div>
      {%- endif -%}
    </div>

    <nav class="header__inline-menu">
      <ul class="list-menu list-menu--inline" role="list">
        {%- for link in section.settings.menu.links -%}
          <li>
            <a
              href="{{ link.url }}"
              class="header__menu-item list-menu__item link link--text focus-inset"
              {% if link.current %} aria-current="page"{% endif %}
            >
              {{ link.title | escape }}
            </a>
          </li>
        {%- endfor -%}
      </ul>
    </nav>

    <div class="header__icons">
      <div class="desktop-localization-wrapper">
      </div>

      <a href="{{ routes.cart_url }}" class="header__icon header__icon--cart link focus-inset" id="cart-icon-bubble">
        <svg class="icon icon-cart-empty" aria-hidden="true" focusable="false" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40 40" fill="none">
          <path fill="currentColor" fill-rule="evenodd" d="m15.75 11.8h-3.16l-.77 11.6a5 5 0 0 0 4.99 5.34h7.38a5 5 0 0 0 4.99-5.33L28.4 11.8H25.24a7.75 7.75 0 0 0-15.49 0ZM21.48 9.66a4.25 4.25 0 0 0-8.22 0h8.22Z"/>
        </svg>
        <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>
        {%- if cart != empty -%}
          <div class="cart-count-bubble">
            {%- if cart.item_count < 100 -%}
              <span aria-hidden="true">{{ cart.item_count }}</span>
            {%- endif -%}
            <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
          </div>
        {%- endif -%}
      </a>
    </div>
  </header>
</{% if section.settings.enable_sticky_header %}sticky-header{% else %}div{% endif %}>

{% javascript %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.getElementById('shopify-section-header');
      this.headerBounds = {};
      this.currentScrollTop = 0;
      this.preventReveal = false;
      this.predictiveSearch = this.querySelector('predictive-search');

      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => this.preventReveal = true;

      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);

      this.createObserver();
    }

    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
        if (this.preventReveal) {
          this.isScrollingDown = true;
          this.preventReveal = false;
        }
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('shopify-section-header-sticky', 'shopify-section-header-open');
        this.header.classList.remove('shopify-section-header-hidden');
      } else if (scrollTop <= this.headerBounds.top) {
        this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'shopify-section-header-open');
      }

      this.currentScrollTop = scrollTop;
    }
  }

  customElements.define('sticky-header', StickyHeader);
{% endjavascript %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if settings.logo %}
      "logo": {{ settings.logo | image_url: width: 500 | prepend: "https:" | json }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "settings": [
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        {
          "value": "accent-1",
          "label": "t:sections.all.colors.accent_1.label"
        },
        {
          "value": "accent-2",
          "label": "t:sections.all.colors.accent_2.label"
        },
        {
          "value": "background-1",
          "label": "t:sections.all.colors.background_1.label"
        },
        {
          "value": "background-2",
          "label": "t:sections.all.colors.background_2.label"
        },
        {
          "value": "inverse",
          "label": "t:sections.all.colors.inverse.label"
        }
      ],
      "default": "background-1",
      "label": "t:sections.all.colors.label"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "checkbox",
      "id": "enable_sticky_header",
      "default": true,
      "label": "t:sections.header.settings.enable_sticky_header.label",
      "info": "t:sections.header.settings.enable_sticky_header.info"
    }
  ]
}
{% endschema %}